version: "3.8"

x-airflow-common: &airflow-common
  image: apache/airflow:2.9.3
  environment:
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__LOAD_EXAMPLES: "False"
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "True"
    # --- DB connection (important) ---
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
  volumes:
    - ./dags:/opt/airflow/dags
    - ./data:/opt/airflow/data
    - ./include:/opt/airflow/include
    - ./logs:/opt/airflow/logs
  user: "${AIRFLOW_UID:-50000}:0"

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
    restart: unless-stopped

  airflow-init:
    <<: *airflow-common
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: /bin/bash
    command:
      - -c
      - |
        set -euo pipefail
        # Optional: install your DAG dependencies
        if [ -f /opt/airflow/requirements.txt ]; then
          pip install --no-cache-dir -r /opt/airflow/requirements.txt
        fi
        # Initialize / migrate DB, then create a default admin user
        airflow db migrate
        airflow users create \
          --username airflow \
          --password airflow \
          --firstname Air \
          --lastname Flow \
          --role Admin \
          --email admin@example.org
    restart: "no"

  airflow-webserver:
    <<: *airflow-common
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    command: webserver
    ports: [ "8080:8080" ]

  airflow-scheduler:
    <<: *airflow-common
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    command: scheduler

